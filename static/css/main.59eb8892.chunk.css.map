{"version":3,"sources":["webpack://src/components/topBar/topBar.scss","webpack://src/global.scss","webpack://src/components/intro/intro.scss","webpack://src/components/portfolio/portfolio.scss","webpack://src/components/portfolio/portfolioList/portfolioList.scss","webpack://src/components/portfolio/aboutWork/aboutWork.scss","webpack://src/components/contact/contact.scss","webpack://src/app.scss","webpack://src/components/menu/menu.scss","webpack://src/components/skill/works.scss","webpack://src/components/skill/progress/progress.scss"],"names":[],"mappings":"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","file":"main.59eb8892.chunk.css","sourcesContent":["@import '../../global';\r\n\r\n\r\n.topbar {\r\n  width: 100vw;\r\n  background-color: #fff;\r\n  height: 70px;\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 2;\r\n  color: $mainColor;\r\n  transition: all .7s ease;\r\n  @include media('<=tablet') {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .wrapper {\r\n    width: 100vw;\r\n    padding: 10px 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n\r\n    .left {\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      .logo {\r\n        font-size: 40px;\r\n        font-weight: 700;\r\n        text-decoration: none;\r\n        color: inherit;\r\n        margin-right: 40px;\r\n        @include media('<=tablet') {\r\n          margin-right: 10px;\r\n          font-size: 20px;\r\n        }\r\n      }\r\n\r\n      .itemContainer {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-left: 30px;\r\n        @include media('<=tablet') {\r\n          display: none;\r\n        }\r\n\r\n        .icon {\r\n          font-size: 22px;\r\n          margin-right: 5px;\r\n        }\r\n\r\n        span {\r\n          font-size: 18px;\r\n          font-weight: 500;\r\n        }\r\n      }\r\n    }\r\n\r\n    .right {\r\n\r\n\r\n      .hamburger {\r\n        width: 35px;\r\n        height: 25px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        cursor: pointer;\r\n        overflow-x: hidden;\r\n        overflow-y: hidden;\r\n        margin-right: 40px;\r\n        @include media('<=tablet') {\r\n          margin-right: 0;\r\n        }\r\n\r\n        span {\r\n\r\n          width: 100%;\r\n          height: 4px;\r\n          background-color: $mainColor;\r\n          transform-origin: left;\r\n          transition: all .7s ease;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &.color {\r\n    background-color: $mainColor;\r\n    color: #fff;\r\n    .right {\r\n      .hamburger{\r\n        span {\r\n          &:first-child {\r\n            background-color: #fff;\r\n\r\n          }\r\n\r\n          &:nth-child(2) {\r\n            background-color: #fff;\r\n          }\r\n\r\n          &:last-child {\r\n            background-color: #fff;\r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &.active {\r\n    background-color: $mainColor;\r\n    color: #fff;\r\n\r\n\r\n    .hamburger {\r\n      overflow-x: hidden;\r\n      overflow-y: hidden;\r\n\r\n      span {\r\n        &:first-child {\r\n          background-color: #fff;\r\n          transform: rotate(45deg);\r\n        }\r\n\r\n        &:nth-child(2) {\r\n          opacity: 0;\r\n        }\r\n\r\n        &:last-child {\r\n          background-color: #fff;\r\n          transform: rotate(-40deg);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","$mainColor: #15023a;\r\n\r\n$breakpoints: (\r\n        \"phone\": 360px,\r\n        \"tablet\": 768px,\r\n        \"desktop\": 1366px,\r\n        \"LGdesktop\": 1920px\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///\t\t'retina2x': (\r\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\r\n///\t\t\t'(min-resolution: 192dpi)'\r\n///\t\t)\r\n///\t);\r\n///\r\n$media-expressions: (\r\n        \"screen\": \"screen\",\r\n        \"print\": \"print\",\r\n        \"handheld\": \"handheld\",\r\n        \"retina2x\": (\r\n                \"(-webkit-min-device-pixel-ratio: 2)\",\r\n                \"(min-resolution: 192dpi)\"\r\n        ),\r\n        \"retina3x\": (\r\n                \"(-webkit-min-device-pixel-ratio: 3)\",\r\n                \"(min-resolution: 350dpi)\"\r\n        )\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media(\">128px\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media(\">20em\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media(\">2.0rem\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n        \"px\": 1,\r\n        \"em\": 0.01,\r\n        \"rem\": 0.1\r\n) !default;\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media(\">phone\") { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media(\">phone\", \"<=tablet\") { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media(\">=358px\", \"<850px\") { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media(\">desktop\", \"<=1350px\") { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media(\"retina2x\") { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\r\n///\r\n@mixin media($conditions...) {\r\n  @for $i from 1 through length($conditions) {\r\n    $conditions: set-nth(\r\n                    $conditions,\r\n                    $i,\r\n                    parse-expression(nth($conditions, $i))\r\n    );\r\n  }\r\n\r\n  $branches: get-query-branches($conditions);\r\n  $query: \"\";\r\n\r\n  @each $branch in $branches {\r\n    @if (str-length($query) != 0) {\r\n      $query: $query + \", \";\r\n    }\r\n\r\n    $query: $query + $branch;\r\n  }\r\n\r\n  @media #{$query} {\r\n    @content;\r\n  }\r\n}\r\n\r\n///\r\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $expressions  - list of expressions\r\n///\r\n/// @throws `$expression` is not a valid expression\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function get-query-branches($expressions) {\r\n  $result: \"\";\r\n  $has-groups: false;\r\n\r\n  // Getting initial snapshot and looking for groups\r\n  @each $expression in $expressions {\r\n    @if (str-length($result) != 0) {\r\n      $result: $result + \" and \";\r\n    }\r\n\r\n    @if (type-of($expression) == \"string\") {\r\n      $result: $result + $expression;\r\n    } @else if (type-of($expression) == \"list\") {\r\n      $result: $result + nth($expression, 1);\r\n      $has-groups: true;\r\n    } @else {\r\n      @warn '#{$expression} is not a valid expression.';\r\n    }\r\n  }\r\n\r\n  // If we have groups, we have to create all possible combinations\r\n  @if $has-groups {\r\n    @each $expression in $expressions {\r\n      @if (type-of($expression) == \"list\") {\r\n        $first: nth($expression, 1);\r\n\r\n        @each $member in $expression {\r\n          @if ($member != $first) {\r\n            @each $partial in $result {\r\n              $result: join(\r\n                              $result,\r\n                              str-replace-first($first, $member, $partial)\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Parses a string to form a media query expression\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $expression  - expression (in string)\r\n///\r\n/// @throws Expression with type `type-of($expression)` detected, string expected\r\n/// @throws `$expression` is missing an operator\r\n/// @throws Unknown unit: `$unit`\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function parse-expression($expression) {\r\n  $operator: \"\";\r\n  $value: \"\";\r\n  $element: \"\";\r\n  $result: \"\";\r\n  $is-width: true;\r\n\r\n  @if (type-of($expression) != \"string\") {\r\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\r\n  }\r\n\r\n  // Separating the operator from the rest of the expression\r\n  @if (str-slice($expression, 2, 2) == \"=\") {\r\n    $operator: str-slice($expression, 1, 2);\r\n    $value: str-slice($expression, 3);\r\n  } @else {\r\n    $operator: str-slice($expression, 1, 1);\r\n    $value: str-slice($expression, 2);\r\n  }\r\n\r\n  // Checking what type of expression we're dealing with\r\n  @if map-has-key($breakpoints, $value) {\r\n    $result: map-get($breakpoints, $value);\r\n  } @else if map-has-key($media-expressions, $expression) {\r\n    $result: map-get($media-expressions, $expression);\r\n    $is-width: false;\r\n  } @else {\r\n    $result: to-number($value);\r\n  }\r\n\r\n  @if ($is-width) {\r\n    $unit: unit($result);\r\n    $interval: 0;\r\n\r\n    @if (map-has-key($unit-intervals, $unit)) {\r\n      $interval: map-get($unit-intervals, $unit);\r\n    } @else {\r\n      @warn 'Unknown unit: #{$unit}';\r\n    }\r\n\r\n    @if ($operator == \">\") {\r\n      $element: \"(min-width: #{$result + $interval})\";\r\n    } @else if ($operator == \"<\") {\r\n      $element: \"(max-width: #{$result - $interval})\";\r\n    } @else if ($operator == \">=\") {\r\n      $element: \"(min-width: #{$result})\";\r\n    } @else if ($operator == \"<=\") {\r\n      $element: \"(max-width: #{$result})\";\r\n    } @else {\r\n      @warn '#{$expression} is missing an operator.';\r\n    }\r\n  } @else {\r\n    $element: $result;\r\n  }\r\n\r\n  @return $element;\r\n}\r\n\r\n///\r\n/// Replaces the first occurence of the string with the replacement string\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $search  - The value being searched for\r\n/// @param {String}   $replace  - The replacement string\r\n/// @param {String}   $subject  - The string being replaced on\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function str-replace-first($search, $replace, $subject) {\r\n  $search-start: str-index($subject, $search);\r\n\r\n  @if $search-start == null {\r\n    @return $subject;\r\n  }\r\n\r\n  $result: str-slice($subject, 0, $search-start - 1);\r\n  $result: $result + $replace;\r\n  $result: $result + str-slice($subject, $search-start + str-length($search));\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Casts a number to a string\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {String}   $string  - Number to be parsed\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function to-number($string) {\r\n  // Matrices\r\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\r\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\r\n\r\n  // Result\r\n  $result: 0;\r\n  $divider: 0;\r\n  $minus: false;\r\n\r\n  // Looping through all characters\r\n  @for $i from 1 through str-length($string) {\r\n    $character: str-slice($string, $i, $i);\r\n    $index: index($strings, $character);\r\n\r\n    @if $character == \"-\" {\r\n      $minus: true;\r\n    } @else if $character == \".\" {\r\n      $divider: 1;\r\n    } @else {\r\n      @if type-of($index) != \"number\" {\r\n        $result: if($minus, $result * -1, $result);\r\n        @return _length($result, str-slice($string, $i));\r\n      }\r\n\r\n      $number: nth($numbers, $index);\r\n\r\n      @if $divider == 0 {\r\n        $result: $result * 10;\r\n      } @else {\r\n        // Move the decimal dot to the left\r\n        $divider: $divider * 10;\r\n        $number: $number / $divider;\r\n      }\r\n\r\n      $result: $result + $number;\r\n    }\r\n  }\r\n\r\n  @return if($minus, $result * -1, $result);\r\n}\r\n\r\n@function _length($number, $unit) {\r\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\" \"vh\" \"vmin\" \"vmax\";\r\n  $units: 1px 1cm 1mm 1% 1ch 1 pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\r\n  $index: index($strings, $unit);\r\n\r\n  @if type-of($index) != \"number\" {\r\n    @warn 'Unknown unit `#{$unit}`.';\r\n    @return false;\r\n  }\r\n\r\n  @return $number * nth($units, $index);\r\n}\r\n\r\n/**\r\n*\r\n* Testing\r\n*\r\n**/","@import '../../global.scss';\r\n\r\n.intro {\r\n  background-color: #fff;\r\n  display: flex;\r\n  @include media('<=tablet') {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .left {\r\n    flex: .5;\r\n    overflow: hidden;\r\n\r\n\r\n    .imgContainer {\r\n      width: 900px;\r\n      height: 900px;\r\n      background-color: crimson;\r\n      border-radius: 50%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      float: right;\r\n      @include media('<=tablet') {\r\n        width: 300px;\r\n        height: 300px;\r\n      }\r\n      @include media('>=desktop','<=1600px') {\r\n        width: 800px;\r\n        height: 800px;\r\n        margin-top: 0px;\r\n      }\r\n\r\n      .img {\r\n        height: 80%;\r\n        width: 80%;\r\n        @include media('<=tablet') {\r\n          height: 90%;\r\n          width: 90%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .right {\r\n    flex: .5;\r\n    position: relative;\r\n\r\n\r\n    .wrapper {\r\n      width: 100%;\r\n      height: 100%;\r\n      padding-left: 160px;\r\n      //align-items: center;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n\r\n      @include media('<=tablet') {\r\n        padding-left: 0;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n        margin-top: 30px;\r\n        height: 85%;\r\n        h1 {\r\n          font-size: 10px;\r\n        }\r\n      }\r\n\r\n      h1 {\r\n        font-size: 60px;\r\n        margin: 10px 0;\r\n        @include media('<=tablet') {\r\n          font-size: 40px;\r\n\r\n        }\r\n      }\r\n\r\n      h2 {\r\n        font-size: 35px;\r\n        font-weight: 500;\r\n        @include media('<=tablet') {\r\n          font-size: 25px;\r\n        }\r\n      }\r\n\r\n      h3 {\r\n        font-size: 30px;\r\n        @include media('<=tablet') {\r\n          font-size: 20px;\r\n        }\r\n\r\n        span {\r\n          font-size: inherit;\r\n          color: crimson;\r\n          font-size: 40px;\r\n          @include media('<=tablet') {\r\n            font-size: 30px;\r\n          }\r\n\r\n        }\r\n\r\n        .ityped-cursor {\r\n          animation: blink 1s infinite;\r\n          @keyframes blink {\r\n            50% {\r\n              opacity: 1;\r\n            }\r\n            100% {\r\n              opacity: 0;\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    a {\r\n      position: absolute;\r\n      bottom: 10px;\r\n      left: 30%;\r\n      @include media('<=tablet') {\r\n        bottom: 40px;\r\n        left: 80%;\r\n      }\r\n\r\n      img {\r\n        width: 60px;\r\n        animation: arrowBlink 2s infinite;\r\n        @include media('<=tablet') {\r\n          width: 50px;\r\n        }\r\n      }\r\n\r\n      @keyframes arrowBlink {\r\n        to {\r\n          opacity: 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","@import '../../global';\r\n\r\n.portfolio {\r\n  background-color: crimson;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  @include media('<=tablet') {\r\n    width: 100vw;\r\n\r\n  }\r\n\r\n  h1 {\r\n    font-size: 50px;\r\n    @include media('<=tablet') {\r\n      font-size: 40px;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    margin: 10px;\r\n    list-style: none;\r\n    display: flex;\r\n    @include media('<=tablet') {\r\n      flex-wrap: wrap;\r\n      justify-content: center;\r\n      margin: 0;\r\n    }\r\n    //@include decs {\r\n    //  flex-wrap: wrap;\r\n    //  justify-content: center;\r\n    //  margin: 0;\r\n    //}\r\n\r\n  }\r\n\r\n  .container {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n\r\n\r\n    @include media('<=LGdesktop') {\r\n      width: 80%;\r\n      justify-content: center;\r\n    }\r\n    @include media('<=tablet') {\r\n\r\n      width: 100%;\r\n      justify-content: center;\r\n    }\r\n\r\n    .item {\r\n      width: 350px;\r\n      height: 300px;\r\n\r\n      margin: 10px 20px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      color: #fff;\r\n      position: relative;\r\n      transition: all .5s ease-out;\r\n      border-radius: 15px;\r\n      cursor: pointer;\r\n      @include media('>=desktop', '<=1600px') {\r\n        margin-top: 10px;\r\n        width: 370px;\r\n        height: 240px;\r\n      }\r\n      @include media('<=tablet') {\r\n        justify-content: space-between;\r\n        width: 140px;\r\n        height: 130px;\r\n      }\r\n\r\n      div {\r\n        position: absolute;\r\n        margin-top: -600px;\r\n        transition: all 1s ease;\r\n        display: flex;\r\n\r\n        //border: 2px solid red;\r\n        align-items: center;\r\n        justify-content: center;\r\n        flex-direction: column;\r\n        width: 100%;\r\n\r\n        h3 {\r\n          z-index: 2;\r\n          font-size: 40px;\r\n          margin-bottom: 20px;\r\n          transition: all 1s ease;\r\n          @include media('<=tablet') {\r\n            font-size: 15px;\r\n          }\r\n\r\n        }\r\n\r\n        div {\r\n          position: relative;\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          margin: 0 auto;\r\n\r\n          .btn {\r\n\r\n            //position: relative;\r\n            z-index: 2;\r\n            text-decoration: none;\r\n            width: 50%;\r\n\r\n            //font-size: 18px;\r\n            //color: #fff;\r\n\r\n            button {\r\n              width: 100%;\r\n              border: 2px solid #fff;\r\n              font-size: 18px;\r\n              color: #fff;\r\n              transition: all .4s ease;\r\n              @include media('<=tablet') {\r\n                font-size: 10px;\r\n                width: 40%;\r\n              }\r\n            }\r\n\r\n          }\r\n\r\n          &:hover {\r\n\r\n            .btn {\r\n\r\n              button {\r\n                border: 2px solid crimson;\r\n                color: crimson;\r\n              }\r\n            }\r\n\r\n\r\n          }\r\n\r\n\r\n        }\r\n      }\r\n\r\n\r\n      img {\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n        z-index: 1;\r\n      }\r\n\r\n      &:hover {\r\n        background-color: $mainColor;\r\n\r\n        div {\r\n          margin-top: 0;\r\n\r\n          div {\r\n\r\n\r\n          }\r\n        }\r\n\r\n\r\n        img {\r\n          opacity: .2;\r\n          z-index: 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","@import '../../../global';\r\n.portfolioList {\r\n  font-size: 18px;\r\n  margin-right: 50px;\r\n  padding: 7px;\r\n  cursor: pointer;\r\n  border-radius: 15px;\r\n\r\n  &.active {\r\n    background-color: $mainColor;\r\n    color: #fff;\r\n  }\r\n}","@import '../../../global';\r\n\r\n.aboutWork {\r\n  background-color: #fff;\r\n  height: calc(100vh - 70px);\r\n  margin-top: 70px;\r\n  width: 100vw;\r\n  position: relative;\r\n\r\n  .arrow {\r\n    font-size: 90px;\r\n    font-weight: 900;\r\n    position: absolute;\r\n    animation: blink 1s infinite;\r\n    transition: all .4s ease-out;\r\n    left: 10px;\r\n    color: #15023a;\r\n\r\n    top: 40px;\r\n    @include media('<=tablet') {\r\n      display: none;\r\n    }\r\n    @keyframes blink {\r\n      50% {\r\n        left: 50px\r\n      }\r\n    }\r\n  }\r\n\r\n  .wrapper {\r\n    //border: 1px solid;\r\n    max-width: 1400px;\r\n    margin: 0 auto;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    @include media('<=tablet') {\r\n      flex-direction: column;\r\n\r\n    }\r\n\r\n    .left {\r\n      height: 100%;\r\n      //background-color: whitesmoke;\r\n      flex: 1;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      flex-direction: column;\r\n      overflow: hidden;\r\n      @include media('<=tablet') {\r\n        justify-content: none;\r\n      }\r\n\r\n      .back {\r\n        font-size: 30px;\r\n        color: $mainColor;\r\n        font-weight: 600;\r\n        display: none;\r\n        @include media('<=tablet') {\r\n          display: block;\r\n        }\r\n      }\r\n\r\n      @include media('<=tablet') {\r\n\r\n        justify-content: flex-end;\r\n\r\n      }\r\n\r\n      .imgBox {\r\n        width: 90%;\r\n        height: auto;\r\n        display: flex;\r\n        transform: rotate(10deg);\r\n        transition: all .6s ease-in;\r\n        border: 1px solid;\r\n        @include media('<=tablet') {\r\n          height: 85%;\r\n          width: 100%;\r\n          transform: rotate(0deg);\r\n\r\n        }\r\n\r\n        img {\r\n          @include media('<=tablet') {\r\n\r\n            width: 100vw;\r\n            transform: rotate(0deg);\r\n            object-position: center;\r\n          }\r\n        }\r\n\r\n        //&:hover {\r\n        //  transform: scale(.8);\r\n        //  position: absolute;\r\n        //  z-index: 10;\r\n        //  left: 0;\r\n        //  transition: all .6s ease-in;\r\n        //  @include mobile {\r\n        //    transform: scale(1);\r\n        //    position: relative;\r\n        //    z-index: 10;\r\n        //    left: 0;\r\n        //    transition: all .6s ease-in;\r\n        //\r\n        //  }\r\n        //}\r\n      }\r\n    }\r\n\r\n    .right {\r\n      flex: 1;\r\n      height: 60%;\r\n      //border: 1px solid;\r\n      display: flex;\r\n      justify-content: space-around;\r\n      flex-direction: column;\r\n      border-left: 4px solid $mainColor;\r\n      @include media('<=tablet') {\r\n        border:none\r\n      }\r\n      .text {\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        //border: 1px solid;\r\n        height: 50%;\r\n        justify-content: space-between;\r\n\r\n        h1 {\r\n          font-size: 70px;\r\n          color: $mainColor;\r\n          font-weight: 700;\r\n          letter-spacing: .03em;\r\n          @include media('<=tablet') {\r\n            font-size: 40px;\r\n          }\r\n        }\r\n\r\n        p {\r\n          max-width: 600px;\r\n          display: flex;\r\n          align-items: center;\r\n          text-align: center;\r\n          color: $mainColor;\r\n          font-size: 27px;\r\n          font-weight: 300;\r\n          @include media('<=tablet') {\r\n            font-size: 23px\r\n          }\r\n        }\r\n\r\n        span {\r\n          font-size: 30px;\r\n          font-weight: 700;\r\n          color: crimson;\r\n          @include media('<=tablet') {\r\n            font-size: 24px;\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      .btn {\r\n\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n\r\n        height: 20%;\r\n        width: 60%;\r\n        margin: 0 auto;\r\n        @include media('<=tablet') {\r\n          width: 100%;\r\n        }\r\n\r\n        a {\r\n          font-size: 24px;\r\n          border: 2.5px solid $mainColor;\r\n          color: $mainColor;\r\n          transition: all .3s ease-out;\r\n          text-decoration: none;\r\n          cursor: pointer;\r\n          border-radius: 10px;\r\n          padding: 10px 20px;\r\n          @include media('<=tablet') {\r\n            font-size: 18px;\r\n\r\n          }\r\n\r\n          &:hover {\r\n            border-color: crimson;\r\n            color: crimson;\r\n\r\n          }\r\n        }\r\n\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\n.wait {\r\n  background-color: crimson;\r\n  height: calc(100vh - 70px);\r\n  margin-top: 70px;\r\n  width: 100vw;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n\r\n  p {\r\n    color: #15023a;\r\n    font-size: 50px;\r\n    font-weight: 600;\r\n    margin-top: 50px;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 100px;\r\n  }\r\n}","@import '../../global';\r\n\r\n.contact {\r\n  background-color: #fff;\r\n  display: flex;\r\n  @include media('<=tablet') {\r\n    flex-direction: column;\r\n\r\n  }\r\n\r\n  .left {\r\n    flex: 1;\r\n    overflow: hidden;\r\n    @include media('<=tablet') {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n\r\n    img {\r\n      height: 90%;\r\n\r\n    }\r\n  }\r\n\r\n  .right {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n\r\n    h2 {\r\n      font-size: 40px;\r\n      @include media('<=tablet') {\r\n        font-size: 30px;\r\n      }\r\n    }\r\n\r\n\r\n    form {\r\n      width: 80%;\r\n      height: 60%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: space-around;\r\n      overflow: hidden;\r\n\r\n      position: relative;\r\n      @include media('<=tablet') {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n      }\r\n\r\n      .input {\r\n\r\n        overflow: hidden;\r\n        padding: 20px;\r\n        font-size: 15px;\r\n        width: 70%;\r\n        height: 20px;\r\n        outline: none;\r\n\r\n        &:focus {\r\n          border-color: crimson;\r\n        }\r\n\r\n        @include media('>=desktop','<=1600px') {\r\n          height: 0px;\r\n        }\r\n        @include media('<=tablet') {\r\n          height: 0px;\r\n        }\r\n      }\r\n\r\n      .textarea {\r\n        height: 230px;\r\n        padding: 20px;\r\n        width: 70%;\r\n        overflow: hidden;\r\n        font-size: 15px;\r\n\r\n        &:focus {\r\n          border-color: crimson;\r\n\r\n        }\r\n\r\n        @include media('>=desktop','<=1600px') {\r\n          height: 190px;\r\n        }\r\n        @include media('<=tablet') {\r\n          height: 70px;\r\n        }\r\n      }\r\n\r\n      button {\r\n        //width: 150px;\r\n        //height: 30px;\r\n        //color: whitesmoke;\r\n        //background-color: crimson;\r\n        //font-size: 20px;\r\n        //border: none;\r\n        //border-radius: 10px;\r\n        //font-weight: 500;\r\n        //cursor: pointer;\r\n        color: crimson;\r\n        border: 2px solid crimson;\r\n        font-size: 20px;\r\n        padding: 7px 35px;\r\n      }\r\n\r\n      span {\r\n        color: crimson;\r\n\r\n      }\r\n    }\r\n  }\r\n}",".app {\r\n  height: 100vh;\r\n\r\n  overflow: hidden;\r\n\r\n  .section::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  .section {\r\n    width: 100%;\r\n    height: calc(100vh - 70px);\r\n    background-color: aqua;\r\n    position: relative;\r\n    top: 70px;\r\n    scroll-behavior: smooth;\r\n    scroll-snap-type: y mandatory;\r\n    scrollbar-width: none;\r\n\r\n\r\n    > * {\r\n      width: 100vw;\r\n      height: calc(100vh - 70px);\r\n      scroll-snap-align: start;\r\n    }\r\n  }\r\n}","@import '../../global';\r\n\r\n.menu {\r\n  width: 0px;\r\n  height: calc(100vh - 70px);\r\n  background-color: $mainColor;\r\n  position: absolute;\r\n  top: 70px;\r\n  right: -300px;\r\n  z-index: 2;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  transition: all .7s ease-in-out;\r\n\r\n  &.active {\r\n    right: 0;\r\nwidth: 300px;\r\n  }\r\n\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n    font-size: 40px;\r\n    color: #fff;\r\n    font-weight: 300;\r\n    width: 75%;\r\n\r\n\r\n    li {\r\n      margin-bottom: 27px;\r\n      transition: all .3s ease;\r\n\r\n      a {\r\n        text-decoration: none;\r\n        font-size: inherit;\r\n        color: inherit;\r\n      }\r\n\r\n      &:hover {\r\n        font-weight: 500;\r\n        color: #9c9aa0;\r\n\r\n      }\r\n    }\r\n  }\r\n}","@import \"../../global\";\r\n\r\n.skill {\r\n  background-color: #15023a;\r\n\r\n  .wrapper{\r\n    max-width: 1400px;\r\n    margin: 0 auto;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n  }\r\n}","@import \"../../../global\";\r\n\r\n.main {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 80%;\r\n  justify-content: space-between;\r\n  border-bottom: 5px solid #fff;\r\n  padding-bottom: 10px;\r\n  @include media('<=tablet') {\r\n    flex-direction: column;\r\n    border-bottom: 0;\r\n  }\r\n  h1 {\r\n    font-size: 60px;\r\n    font-weight: 600;\r\n    color: #fff;\r\n    @include media('<=tablet') {\r\n      font-size: 40px;\r\n    }\r\n  }\r\n\r\n  .progress {\r\n    position: relative;\r\n    background-color: #fff;\r\n    width: 40%;\r\n    height: 35px;\r\n    border-radius: 7px;\r\n    overflow: hidden;\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: 20px;\r\n    border: 0px;\r\n    @include media('<=tablet') {\r\n      width: 90%;\r\n      height: 25px;\r\n      margin-top: 10px;\r\n    }\r\n\r\n    p {\r\n      position: absolute;\r\n      left: 10px;\r\n      color: #15023a;\r\n      z-index: 1;\r\n      font-size: 23px;\r\n      font-weight: 700;\r\n    }\r\n\r\n    .wrapper {\r\n      position: absolute;\r\n      height: 100%;\r\n      left: 0;\r\n\r\n      background-color: #00ff43;\r\n      border: 0px;\r\n    }\r\n  }\r\n}\r\n\r\n"]}